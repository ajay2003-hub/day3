class Solution {
    public int trap(int[] height) {
        int n=height.length;
        //trapped water=(waterlevel-height)*width
        //find water level
        //find boundaries
        //find left max boundary
        int leftmax[]=new int[n];
        leftmax[0]=height[0];
        for(int i=1;i<n;i++){
            leftmax[i]=Math.max(height[i],leftmax[i-1]);
        }

        //find right max boundary
        int rightmax[]=new int[n];
        rightmax[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--){
            rightmax[i]=Math.max(height[i],rightmax[i+1]);
        }

        //waterlevel=min(leftMaxBoundary,rightMaxBoundary)
        int wl;
        int tw=0;
        for(int i=0;i<n;i++){
            wl=Math.min(leftmax[i],rightmax[i]);
            tw +=(wl-height[i])*1;
        }
        return tw;
        
    }
}
